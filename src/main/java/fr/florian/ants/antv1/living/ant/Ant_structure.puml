@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "*",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "*",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": true,
    "cutInterfaceStructures": true,
    "cutDataStructures": true,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 3,
    "backwardDepth": 3,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "fr.florian.ants.antv1.living.ant.Ant",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_765945715 { 
   	label=florian
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_949466157 { 
   	label=ants
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   Ant1168239085[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Ant</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   color: Color [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   headingDirection: Direction [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   size: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   strength: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   sub: AntSubscription [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   uniqueAnthillId: long [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   weak: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># act()</TD></TR>
<TR><TD ALIGN="LEFT" >+ draw(context: GraphicsContext, position: Vector)</TD></TR>
<TR><TD ALIGN="LEFT" ># executeAction()</TD></TR>
<TR><TD ALIGN="LEFT" >+ heal()</TD></TR>
<TR><TD ALIGN="LEFT" >+ onAttackedBy(l: Living)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onComplete()</TD></TR>
<TR><TD ALIGN="LEFT" >+ onError(throwable: Throwable)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onKilled()</TD></TR>
<TR><TD ALIGN="LEFT" >+ onNext(item: AntSignal)</TD></TR>
<TR><TD ALIGN="LEFT" ># onOrderReceived(order: AntOrder)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onSubscribe(subscription: Subscription)</TD></TR>
<TR><TD ALIGN="LEFT" >+ weaken()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AntHillTile1424843505[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AntHillTile</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   color: Color [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   foodHeld: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   score: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   uniqueId: long [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addFood()</TD></TR>
<TR><TD ALIGN="LEFT" >+ consumeFood(amount: int): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ draw(context: GraphicsContext, position: Vector)</TD></TR>
<TR><TD ALIGN="LEFT" >+ makeInitialSpawns(pos: Vector)</TD></TR>
<TR><TD ALIGN="LEFT" >+ makeSpawn(ant: Ant, revive: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onAntDieOn(a: Ant)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInteract(a: Ant)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onWalkOn(l: Living)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AntSignal1282801386[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AntSignal</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   from: Vector [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   maxSize: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   order: AntOrder [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   sender: Ant [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   signalSpeed: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   size: double [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ draw(context: GraphicsContext, position: Vector)</TD></TR>
<TR><TD ALIGN="LEFT" >- drawSignalCircle(context: GraphicsContext, position: Vector, color: Color, size: double)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getOrder(from: Vector): AntOrder</TD></TR>
<TR><TD ALIGN="LEFT" >+ isAccessible(from: Vector): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ mayDissipate(): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ run()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AntSubscription1282801386[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AntSubscription</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   executor: ExecutorService [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   future: Future&lt;?&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   signals: List&lt;AntSignal&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   subscriber: Subscriber&lt;? super AntSignal&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ acknowledge(sig: AntSignal)</TD></TR>
<TR><TD ALIGN="LEFT" >+ cancel()</TD></TR>
<TR><TD ALIGN="LEFT" >+ emitSignal(sig: AntSignal)</TD></TR>
<TR><TD ALIGN="LEFT" >+ request(n: long)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BasicResource459354063[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BasicResource</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(v: Vector): Resource</TD></TR>
<TR><TD ALIGN="LEFT" >+ draw(context: GraphicsContext, position: Vector)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DeadAnt459354063[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DeadAnt</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   color: Color [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   dead: Ant [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   size: double [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(v: Vector): Resource</TD></TR>
<TR><TD ALIGN="LEFT" >+ draw(context: GraphicsContext, position: Vector)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onDeposit(tile: AntHillTile)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExtremelyRareResource459354063[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExtremelyRareResource</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(v: Vector): Resource</TD></TR>
<TR><TD ALIGN="LEFT" >+ draw(context: GraphicsContext, position: Vector)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FightManager1220732173[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FightManager</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   fighter: Living [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   fighters: List&lt;Living&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ Hajimeru()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FoodResource459354063[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FoodResource</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   foodType: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(v: Vector): Resource</TD></TR>
<TR><TD ALIGN="LEFT" >+ draw(context: GraphicsContext, position: Vector)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onDeposit(tile: AntHillTile)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HeldResourceList1220732173[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HeldResourceList</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   capacity: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   resources: List&lt;Resource&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ add(r: Resource)</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(): Resource</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Living330113268[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Living</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   alive: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   position: Vector [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># act()</TD></TR>
<TR><TD ALIGN="LEFT" >+ attack(l: Living)</TD></TR>
<TR><TD ALIGN="LEFT" >+ kill()</TD></TR>
<TR><TD ALIGN="LEFT" ># onAttackedBy(l: Living)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onKilled()</TD></TR>
<TR><TD ALIGN="LEFT" >+ revive()</TD></TR>
<TR><TD ALIGN="LEFT" >+ run()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Map1424843505[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Map</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   antHills: List&lt;AntHillTile&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   livings: List&lt;Living&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tiles: Map&lt;Vector, Tile&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- addTile(v: Vector, t: Tile)</TD></TR>
<TR><TD ALIGN="LEFT" >+ annihilate()</TD></TR>
<TR><TD ALIGN="LEFT" >+ displayResources(context: GraphicsContext, pos: Vector, displayPos: Vector)</TD></TR>
<TR><TD ALIGN="LEFT" >+ drawPheromones(pos: Vector, displayPos: Vector, context: GraphicsContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ drawTile(vector: Vector, displayPos: Vector, graphicsContext2D: GraphicsContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAntsOf(uniqueId: long): List&lt;Ant&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLivingsAt(position: Vector): List&lt;Living&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTile(pos: Vector): Tile</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTilePosition(tile: Tile): Vector</TD></TR>
<TR><TD ALIGN="LEFT" >+ init(placer: IResourcePlacer)</TD></TR>
<TR><TD ALIGN="LEFT" >+ killAll()</TD></TR>
<TR><TD ALIGN="LEFT" >+ spawn(living: T)</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateLivings(): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

QueenAnt1168239085[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)QueenAnt</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   executor: ExecutorService [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   signals: List&lt;AntSignal&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   subs: List&lt;AntSubscription&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   timeOperationCounter: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># executeAction()</TD></TR>
<TR><TD ALIGN="LEFT" >- makeSpawnNewAnt()</TD></TR>
<TR><TD ALIGN="LEFT" ># onOrderReceived(order: AntOrder)</TD></TR>
<TR><TD ALIGN="LEFT" >+ subscribe(subscriber: Subscriber&lt;? super AntSignal&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RareResource459354063[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RareResource</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   seedType: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(v: Vector): Resource</TD></TR>
<TR><TD ALIGN="LEFT" >+ draw(context: GraphicsContext, position: Vector)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Resource459354063[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Resource</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   position: Vector [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   rarity: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   rotation: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   score: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clone(v: Vector): Resource</TD></TR>
<TR><TD ALIGN="LEFT" >+ onDeposit(tile: AntHillTile)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ResourceLoader1220732173[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ResourceLoader</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   loader: ClassLoader [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   streams: Map&lt;String, Image&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ loadResource(res: String): Image</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveResource(name: String, i: Image)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ResourceTile1424843505[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ResourceTile</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   resources: List&lt;Resource&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ draw(context: GraphicsContext, position: Vector)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onAntDieOn(a: Ant)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInteract(a: Ant)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onWalkOn(l: Living)</TD></TR>
<TR><TD ALIGN="LEFT" >+ resourceCount(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ take(): Resource</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SoldierAnt1168239085[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SoldierAnt</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   actionCounter: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   executor: ExecutorService [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   initialPosition: Vector [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   signals: List&lt;AntSignal&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   subs: List&lt;AntSubscription&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># executeAction()</TD></TR>
<TR><TD ALIGN="LEFT" ># onOrderReceived(order: AntOrder)</TD></TR>
<TR><TD ALIGN="LEFT" >+ subscribe(subscriber: Subscriber&lt;? super AntSignal&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TickWaiter1220732173[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TickWaiter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   isFree: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ emitTick()</TD></TR>
<TR><TD ALIGN="LEFT" >+ free()</TD></TR>
<TR><TD ALIGN="LEFT" >+ lock()</TD></TR>
<TR><TD ALIGN="LEFT" >+ waitTick()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Tile1424843505[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Tile</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   pheromones: Map&lt;Long, PheromoneSet&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getPheromoneLevel(antHillId: long): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ getPheromoneLevel(antHillId: long, pheromoneType: Class&lt;? extends Pheromone&gt;): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ onAntDieOn(a: Ant)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onInteract(a: Ant)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onWalkOn(l: Living)</TD></TR>
<TR><TD ALIGN="LEFT" >+ placePheromone(antHillId: long, p: Pheromone)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removePheromone(antHillId: long, pheromone: Pheromone)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Vector1220732173[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Vector</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   x: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   y: double [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ add(v: Vector): Vector</TD></TR>
<TR><TD ALIGN="LEFT" >+ add(v: double): Vector</TD></TR>
<TR><TD ALIGN="LEFT" >+ angle(vector: Vector): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ delta(from: Vector): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ down(): Vector</TD></TR>
<TR><TD ALIGN="LEFT" >+ left(): Vector</TD></TR>
<TR><TD ALIGN="LEFT" >+ magnitude(): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ multi(v: double): Vector</TD></TR>
<TR><TD ALIGN="LEFT" >+ right(): Vector</TD></TR>
<TR><TD ALIGN="LEFT" >+ scalar(v: Vector): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ up(): Vector</TD></TR>
<TR><TD ALIGN="LEFT" >+ x(): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ y(): double</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

WorkerAnt1168239085[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)WorkerAnt</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   deadCells: List&lt;Vector&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   heldResources: HeldResourceList [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   path: List&lt;Vector&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   pathCleared: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   soldier: SoldierAnt [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   stateMachine: StateMachine [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- clearPath(in: List&lt;Vector&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" ># executeAction()</TD></TR>
<TR><TD ALIGN="LEFT" ># onOrderReceived(order: AntOrder)</TD></TR>
<TR><TD ALIGN="LEFT" >- takeResource(tile: ResourceTile)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

WorldView1015794271[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)WorldView</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   canvas: Canvas [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   clickPoint: Vector [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   detail: TileDetail [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   displayType: DisplayType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   hillArrows: Map&lt;Long, ArrowDisplay&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   manager: MarkerManager [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- applyShaders()</TD></TR>
<TR><TD ALIGN="LEFT" >+ bindWidth(widthProperty: DoubleBinding)</TD></TR>
<TR><TD ALIGN="LEFT" >+ displayAll()</TD></TR>
<TR><TD ALIGN="LEFT" >+ drawArrows(context: GraphicsContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ drawRotatedImage(context: GraphicsContext, i: Image, position: Vector, angle: double, size: double)</TD></TR>
<TR><TD ALIGN="LEFT" >+ drawTile(pos: Vector, displayPos: Vector, context: GraphicsContext)</TD></TR>
<TR><TD ALIGN="LEFT" >+ goTo(position: Vector)</TD></TR>
<TR><TD ALIGN="LEFT" >+ init()</TD></TR>
<TR><TD ALIGN="LEFT" >+ toNextDisplay()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
Ant1168239085 -> AntSignal1282801386[label="onNext() -> getOrder()"];
Ant1168239085 -> AntSubscription1282801386[label="sub
[0..1]"];
Ant1168239085 -> FightManager1220732173[label="act() -> Hajimeru()"];
Ant1168239085 -> QueenAnt1168239085[arrowhead=none, arrowtail=empty, dir=both];
Ant1168239085 -> ResourceLoader1220732173[label="draw() -> loadResource()"];
Ant1168239085 -> SoldierAnt1168239085[arrowhead=none, arrowtail=empty, dir=both];
Ant1168239085 -> Vector1220732173[label="draw() -> add()"];
Ant1168239085 -> WorkerAnt1168239085[arrowhead=none, arrowtail=empty, dir=both];
Ant1168239085 -> WorldView1015794271[label="draw() -> drawRotatedImage()"];
AntSignal1282801386 -> Ant1168239085[label="draw() -> draw()", arrowhead=none];
AntSignal1282801386 -> Ant1168239085[label="sender
[0..1]"];
AntSignal1282801386 -> AntHillTile1424843505[label="draw() -> draw()", arrowhead=none];
AntSignal1282801386 -> BasicResource459354063[label="draw() -> draw()", arrowhead=none];
AntSignal1282801386 -> DeadAnt459354063[arrowhead=none];
AntSignal1282801386 -> ExtremelyRareResource459354063[label="draw() -> draw()", arrowhead=none];
AntSignal1282801386 -> FoodResource459354063[label="draw() -> draw()", arrowhead=none];
AntSignal1282801386 -> Living330113268[arrowhead=none];
AntSignal1282801386 -> RareResource459354063[label="draw() -> draw()", arrowhead=none];
AntSignal1282801386 -> Resource459354063[arrowhead=none];
AntSignal1282801386 -> ResourceTile1424843505[label="draw() -> draw()", arrowhead=none];
AntSignal1282801386 -> TickWaiter1220732173[label="run() -> waitTick()"];
AntSignal1282801386 -> Tile1424843505[arrowhead=none];
AntSignal1282801386 -> Vector1220732173[label="from
[0..1]"];
BasicResource459354063 -> ResourceLoader1220732173[label="draw() -> loadResource()"];
BasicResource459354063 -> WorldView1015794271[label="draw() -> drawRotatedImage()"];
DeadAnt459354063 -> Ant1168239085[label="dead
[0..1]"];
DeadAnt459354063 -> AntHillTile1424843505[label="onDeposit() -> makeSpawn()"];
DeadAnt459354063 -> Living330113268[label="onDeposit() -> revive()"];
DeadAnt459354063 -> Map1424843505[label="onDeposit() -> getTilePosition()"];
DeadAnt459354063 -> ResourceLoader1220732173[label="draw() -> loadResource()"];
DeadAnt459354063 -> WorldView1015794271[label="draw() -> drawRotatedImage()"];
ExtremelyRareResource459354063 -> ResourceLoader1220732173[label="draw() -> loadResource()"];
ExtremelyRareResource459354063 -> WorldView1015794271[label="draw() -> drawRotatedImage()"];
FoodResource459354063 -> AntHillTile1424843505[label="onDeposit() -> addFood()"];
FoodResource459354063 -> ResourceLoader1220732173[label="draw() -> loadResource()"];
FoodResource459354063 -> WorldView1015794271[label="draw() -> drawRotatedImage()"];
Living330113268 -> Ant1168239085[arrowhead=none, arrowtail=empty, dir=both];
RareResource459354063 -> ResourceLoader1220732173[label="draw() -> loadResource()"];
RareResource459354063 -> WorldView1015794271[label="draw() -> drawRotatedImage()"];
Resource459354063 -> BasicResource459354063[arrowhead=none, arrowtail=empty, dir=both];
Resource459354063 -> DeadAnt459354063[arrowhead=none, arrowtail=empty, dir=both];
Resource459354063 -> ExtremelyRareResource459354063[arrowhead=none, arrowtail=empty, dir=both];
Resource459354063 -> FoodResource459354063[arrowhead=none, arrowtail=empty, dir=both];
Resource459354063 -> RareResource459354063[arrowhead=none, arrowtail=empty, dir=both];
ResourceTile1424843505 -> HeldResourceList1220732173[label="onInteract() -> add()"];
ResourceTile1424843505 -> Resource459354063[label="resources
[0..*]"];
ResourceTile1424843505 -> ResourceLoader1220732173[label="draw() -> loadResource()"];
Tile1424843505 -> ResourceTile1424843505[arrowhead=none, arrowtail=empty, dir=both];
    
}
@enduml